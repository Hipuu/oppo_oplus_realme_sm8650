name: Release Test

env:
  TZ: Asia/Shanghai
  CPU: 'sm8650'
  FEIL: 'oppo+oplus+realme'
  ANDROID_VERSION: 'android14'
  KERNEL_VERSION: '6.1'
  KERNEL_NAME: 'android14-11-o-gca13bffobf09'
  KERNELSU_VARIANT: 'SukiSU-Ultra'
  KERNELSU_BRANCH: 'susfs-dev'

on:
  workflow_dispatch:
    inputs:
      lz4k_enable:
        description: 'Whether to install LZ4K patch'
        required: true
        type: choice
        default: 'true'
        options:
          - 'true'
          - 'false'
      scx_enable:
        description: 'Whether to install Fengchi kernel driver'
        required: true
        type: choice
        default: 'true'
        options:
          - 'true'
          - 'false'
      kernel_suffix:
        description: 'Custom kernel version suffix'
        required: false
        type: string
        default: ''

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      KSUVER: ${{ steps.ksu_version.outputs.KSUVER }}
    steps:
      - name: Add SukiSU-Ultra version number
        id: ksu_version
        run: |
          KSU_VERSION="114514"
          echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
          echo "KSUVER=$KSU_VERSION" >> $GITHUB_OUTPUT
          export KSUVER=$KSU_VERSION
  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      actions: read
      
    steps:
      - name: Set variables
        run: |
          if [[ -n "${{ github.event.inputs.kernel_suffix }}" ]]; then
            FULL_VERSION=${{ format('{0}.57-{1}', env.KERNEL_VERSION, github.event.inputs.kernel_suffix) }}
            echo "FULL_VERSION=$FULL_VERSION" >> $GITHUB_ENV
            export FULL_VERSION=$FULL_VERSION
          else
            FULL_VERSION=${{ format('{0}.57-{1}', env.KERNEL_VERSION, env.KERNEL_NAME) }}
            echo "FULL_VERSION=$FULL_VERSION" >> $GITHUB_ENV
            export FULL_VERSION=$FULL_VERSION
          fi
          TIME="$(TZ='Asia/Shanghai' date +'%y%m%d%H%M%S')"
          TIME_FORM="$(TZ='Asia/Shanghai' date +'%Y-%m-%d %H:%M:%S')"
          echo "TIME=$TIME" >> $GITHUB_ENV
          echo "TIME_FORM=$TIME_FORM" >> $GITHUB_ENV
          TAG_HEAD="OPPO+OPlus+Realme-A14-build"
          echo "TAG_HEAD=$TAG_HEAD" >> $GITHUB_ENV
          
      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "${{ env.TAG_HEAD }}-${{ env.TIME }}"
          name: "${{ env.TAG_HEAD }}-${{ env.FULL_VERSION }}"
          body: |
            ### üì± Oppo/OnePlus/Realme Android 14 SukiSU-Ultra SM8650 Universal Kernel | Build Information
            - Kernel Version: ${{ env.FULL_VERSION }}
            - Compilation Time: ${{ env.TIME_FORM }}
            - Device Model: Oppo/OnePlus/Realme Snapdragon 8 Gen 3 6.1 Android 14 Universal Kernel (based on OnePlus 12 Android 14 official OKI source)
            - Features: SukiSU Ultra + SUSFS + VFS + KPM
            - LZ4K Support: ${{ github.event.inputs.lz4k_enable }}
            - Fengchi Kernel Support: ${{ github.event.inputs.scx_enable }}
            - Recommended System: ColorOS 14 / RealmeUI 5.0 (Android 15 theoretically compatible, not tested)
            - SukiSU Manager Download: [SukiSU-Ultra](https://github.com/ShirkNeko/SukiSU-Ultra/releases)
            ### ‚è´Ô∏è Updates:
            - Updated SukiSU Ultra to the latest version (${{ needs.build.outputs.KSUVER }})
            - (Reserved)
            ### üìã Installation Guide
            1. If your phone already has a third-party Recovery installed (e.g., TWRP), download the corresponding AnyKernel flashable package for your device. Enter Recovery mode, flash the package through Recovery, and then restart your device.
            2. If your phone previously had root access, you can install KernelFlasher on your phone. Flash the AnyKernel package in KernelFlasher and restart.
            3. If you have previously flashed the SukiSU Ultra kernel and the SukiSU Ultra Manager has been updated to the latest version, you can directly flash the AnyKernel package within the SukiSU Ultra Manager and restart.
          draft: false
          prerelease: true
